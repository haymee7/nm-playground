<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.zzimcar.dao.BookDao">
  <insert id="save" parameterType="BookDto">
    INSERT playground.book_yjh (
      writer, publisher, publish_at, price, title
    ) VALUES (
      #{writer}, #{publisher}, #{publishAt}, #{price}, #{title}
    )
  </insert>

  <select id="retrieveOne" parameterType="int" resultType="BookDto">
    SELECT
      b.pid, b.writer, b.publisher, b.publish_at, b.price, b.title, b.created_at
    FROM
      playground.book_yjh b
    WHERE
      b.pid = #{pid}
      AND deleted_at IS NULL
  </select>

  <select id="retrieveByCnt" parameterType="map" resultType="BookDto">
    SELECT
      b.pid, b.writer, b.publisher, b.publish_at, b.price, b.title, b.created_at
    FROM
      playground.book_yjh b
    WHERE
      deleted_at IS NULL
    ORDER BY
  <if test='sort.equals("D")'>
     pid DESC
  </if>
  <if test='sort.equals("A")'>
     pid ASC
  </if>
    LIMIT
      #{sp}, #{cnt};
  </select>

  <select id="totalCnt" resultType="int">
    SELECT
      count(*)
    FROM
      playground.book_yjh
  </select>

  <select id="isExist" parameterType="int" resultType="int">
    SELECT
      count(*)
    FROM
      playground.book_yjh
    WHERE pid = #{pid} AND deleted_at IS NULL
  </select>

  <update id="updateOne" parameterType="BookDto">
    UPDATE playground.book_yjh b SET
      b.writer = #{bookDto.writer}, b.publisher = #{bookDto.publisher}, b.publish_at = #{bookDto.publishAt}, b.price = #{bookDto.price}, b.title = #{bookDto.title}
    WHERE
      b.pid = #{pid} AND deleted_at IS NULL;
  </update>

  <delete id="deleteOne" parameterType="int">
    UPDATE playground.book_yjh b SET
      b.deleted_at = now()
    WHERE
      b.pid = #{pid} AND b.deleted_at IS NULL
  </delete>
</mapper>